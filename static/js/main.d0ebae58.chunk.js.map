{"version":3,"sources":["gql/resolvers.js","gql/queries.js","components/EventInfo.js","components/GetDecision.js","components/User.js","components/Invited.js","gql/mutators.js","components/Inputs.js","components/Attendance.js","components/Events.js","components/EventCreator.js","components/App.js","index.js"],"names":["typeDefs","gql","GET_EVENT_BY_ID","GET_CACHED_EVENTS","EventInfo","props","event","host","fname","first_name","lname","last_name","name","title","location","time","time_of_event","date","date_of_event","description","className","style","fontWeight","GetDecision","ATTENDING","marginTop","marginLeft","NOT_ATTENDING","MAYBE","NO_RESPONSE","decision","response","User","useState","commentVisibility","state","setState","attendance","comment","inviteId","useLocation","history","useHistory","onClick","stopPropagation","push","pathname","cursor","Invited","invitationList","invited","map","invite","key","id","guest","UPDATE_INVITATION","CREATE_EVENT","Submit","type","value","cssButton","Button","Radio","htmlFor","labelText","onChange","checked","compare","Field","cssContainer","cssLabel","isActive","cssField","onMouseOver","onActive","onMouseLeave","onFocus","onBlur","Attendance","eventId","values","setValues","handleChange","persist","target","mutation","update","cache","data","updateInvitation","cachedEvents","readQuery","query","events","thisEvent","find","thisInvite","invitations","concat","writeQuery","loading","error","color","onSubmit","preventDefault","variables","invitation","Event","match","useRouteMatch","address","client","useApolloClient","isInviteMatch","RegExp","url","isEventMatch","idMatch","eventID","replace","inviteID","lastErrorID","setLastErrorID","useQuery","useLazyQuery","getEvent","getEventById","cachedEvent","_","isEqual","writeData","length","test","path","Events","inputValue","EventCreator","addGuestForm","startTime","endTime","guests","gName","gSurname","gEmail","backgroundColor","fontSize","padding","onCompleted","createEvent","cols","rows","email","filter","item","marginRight","console","log","start_time_of_event","end_time_of_event","alert","handleCreateEvent","disabled","App","width","height","display","flexDirection","justifyContent","alignItems","listStyle","exact","to","activeStyle","InMemoryCache","link","HttpLink","uri","ApolloClient","resolvers","Mutation","storeEvent","storedEvent","ReactDOM","render","basename","process","document","querySelector"],"mappings":"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","file":"static/js/main.d0ebae58.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\r\n\r\nexport const typeDefs = gql`\r\n    extend type Mutation {\r\n        storeEvent(event: Event!): Event!\r\n    }\r\n`;\r\n\r\nexport const resolvers = {\r\n    Mutation: {\r\n        storeEvent: (_, variables, { cache }) => {\r\n            cache.writeData({ storedEvent: variables.event });\r\n        },\r\n    },\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_USERS = gql`\r\n    query getUsers {\r\n        getUsers {\r\n            id\r\n            email\r\n            first_name\r\n            last_name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_USER_BY_ID = gql`\r\n    query getUserById($id: Int!) {\r\n        getUserById(id: $id) {\r\n            email\r\n            first_name\r\n            last_name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_EVENT_BY_ID = gql`\r\n    query getEventById($id: Int!) {\r\n        getEventById(id: $id) {\r\n            id\r\n            title\r\n            host {\r\n                id\r\n                first_name\r\n                last_name\r\n            }\r\n            description\r\n            date_of_event\r\n            start_time_of_event\r\n            end_time_of_event\r\n            location\r\n            invitations {\r\n                id\r\n                guest {\r\n                    id\r\n                    first_name\r\n                    last_name\r\n                }\r\n                event {\r\n                    id\r\n                }\r\n                attendance\r\n                comment\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n//Local cashe\r\nexport const LOGGED_IN_USER = gql`\r\n    query loggedInUser {\r\n        loggedInUser @client {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CACHED_EVENTS = gql`\r\n    query getCachedEvents {\r\n        events @client {\r\n            id\r\n            title\r\n            host {\r\n                id\r\n                first_name\r\n                last_name\r\n            }\r\n            description\r\n            date_of_event\r\n            start_time_of_event\r\n            end_time_of_event\r\n            location\r\n            invitations {\r\n                id\r\n                guest {\r\n                    id\r\n                    first_name\r\n                    last_name\r\n                }\r\n                event {\r\n                    id\r\n                }\r\n                attendance\r\n                comment\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import React from \"react\";\r\n\r\nconst EventInfo = (props) => {\r\n    const {\r\n        /* id, */\r\n        host: { first_name: fname, last_name: lname },\r\n        name = `${fname} ${lname}`,\r\n        title,\r\n        location,\r\n        time_of_event: time,\r\n        date_of_event: date,\r\n        description,\r\n    } = props.event;\r\n\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <div style={{ fontWeight: \"bold\" }} className=\"card-header \">\r\n                {\" \"}\r\n                Event by {name}\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"card-title\">{title}</div>\r\n                <div className=\"card-text\">{description}</div>\r\n                <div className=\"card-text\">Location: {location}</div>\r\n                <div className=\"card-text\">\r\n                    Date: {date} <br /> Time: {time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventInfo;\r\n","import React from \"react\";\r\n\r\nconst GetDecision = (props) => {\r\n    const { decision } = props;\r\n\r\n    const response = {\r\n        ATTENDING: () => {\r\n            return (\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <i\r\n                        style={{ marginTop: \"5px\" }}\r\n                        className=\"fas fa-check\"\r\n                    ></i>{\" \"}\r\n                    <p style={{ marginLeft: \"60px\" }}> Attending</p>\r\n                </div>\r\n            );\r\n        },\r\n        NOT_ATTENDING: () => {\r\n            return (\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <i\r\n                        style={{ marginTop: \"5px\" }}\r\n                        className=\"fas fa-times-circle\"\r\n                    ></i>\r\n                    <p style={{ marginLeft: \"60px\" }}>Not Attending </p>\r\n                </div>\r\n            );\r\n        },\r\n        MAYBE: () => {\r\n            return (\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <i\r\n                        style={{ marginTop: \"5px\" }}\r\n                        className=\"fas fa-question-circle\"\r\n                    ></i>\r\n                    <p style={{ marginLeft: \"60px\" }}>Maybe</p>\r\n                </div>\r\n            );\r\n        },\r\n        NO_RESPONSE: () => {\r\n            return (\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <i style={{ marginTop: \"5px\" }} className=\"fas fa-sync\"></i>\r\n                    <p style={{ marginLeft: \"60px\" }}>Not respondend</p>\r\n                </div>\r\n            );\r\n        },\r\n    };\r\n\r\n    /* if (decision === \"Is attending.\") {\r\n        return (\r\n            <div className=\"d-flex justify-content-between\">\r\n                <i style={{ marginTop: \"5px\" }} className=\"fas fa-check\"></i>{\" \"}\r\n                <p style={{ marginLeft: \"60px\" }}> Attending</p>\r\n            </div>\r\n        );\r\n    } else if (decision === \"Haven't decided yet.\") {\r\n        return (\r\n            <div className=\"d-flex justify-content-between\">\r\n                <i\r\n                    style={{ marginTop: \"5px\" }}\r\n                    className=\"fas fa-question-circle\"\r\n                ></i>\r\n                <p style={{ marginLeft: \"60px\" }}>Maybe</p>\r\n            </div>\r\n        );\r\n    } else if (decision === \"Can't attend.\") {\r\n        return (\r\n            <div className=\"d-flex justify-content-between\">\r\n                <i\r\n                    style={{ marginTop: \"5px\" }}\r\n                    className=\"fas fa-times-circle\"\r\n                ></i>\r\n                <p style={{ marginLeft: \"60px\" }}>Not Attending </p>\r\n            </div>\r\n        );\r\n    } else {\r\n        // default not responded\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-between\">\r\n                <i style={{ marginTop: \"5px\" }} className=\"fas fa-sync\"></i>\r\n                <p style={{ marginLeft: \"60px\" }}>Not respondend</p>\r\n            </div>\r\n        );\r\n    } */\r\n\r\n    return response[decision]();\r\n};\r\nexport default GetDecision;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport GetDecision from \"./GetDecision\";\r\n\r\nconst response = {\r\n    ATTENDING: \"Is attending.\",\r\n    NOT_ATTENDING: \"Can't attend.\",\r\n    MAYBE: \"Haven't decided yet.\",\r\n    NO_RESPONSE: \"Not responded.\",\r\n};\r\nconst User = (props) => {\r\n    const [state, setState] = useState({ commentVisibility: false });\r\n    const { fname, lname, attendance, comment, inviteId } = props;\r\n    const location = useLocation(),\r\n        history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div\r\n                    className=\"card-header\"\r\n                    onClick={() => {\r\n                        return comment\r\n                            ? setState({\r\n                                  commentVisibility: !state.commentVisibility,\r\n                              })\r\n                            : null;\r\n                    }}\r\n                >\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            {fname} {lname}\r\n                        </div>\r\n                        <GetDecision decision={response[attendance]} />\r\n\r\n                        <i\r\n                            onClick={(event) => {\r\n                                event.stopPropagation();\r\n                                history.push(\r\n                                    `${location.pathname}/${inviteId}`\r\n                                );\r\n                            }}\r\n                            className=\"fas fa-user-edit\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                        ></i>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {state.commentVisibility ? (\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-text\">{comment}</div>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\n\r\nimport User from \"./User\";\r\n\r\nconst Invited = (props) => {\r\n    const invitationList = props.invited.map((invite) => {\r\n        return (\r\n            <li\r\n                key={invite.id}\r\n                className=\"list-group-item list-group-item-warning\"\r\n            >\r\n                <User\r\n                    fname={invite.guest.first_name}\r\n                    lname={invite.guest.last_name}\r\n                    attendance={invite.attendance}\r\n                    comment={invite.comment}\r\n                    inviteId={invite.id}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n    return <ul className=\"list-group\">{invitationList}</ul>;\r\n};\r\n\r\nexport default Invited;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const UPDATE_INVITATION = gql`\r\n    mutation updateInvitation($invitation: UpdateInvitationInput) {\r\n        updateInvitation(invitation: $invitation) {\r\n            id\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_EVENT = gql`\r\n    mutation createEvent($event: CreateEventInput) {\r\n        createEvent(event: $event) {\r\n            id\r\n            message\r\n        }\r\n    }\r\n`;\r\n//local cache\r\nexport const STORE_EVENT = gql`\r\n    mutation StoreEvent($event: Event) {\r\n        storeEvent(event: $event) @client\r\n    }\r\n`;\r\n","import \"./style/Input.css\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const Submit = (props) => {\r\n    return (\r\n        <input\r\n            type=\"submit\"\r\n            key={props.key ? props.key : props.id}\r\n            name={props.name ? props.name : props.id}\r\n            id={props.id}\r\n            value={props.value}\r\n            className={`${props.cssButton} button`}\r\n        />\r\n    );\r\n};\r\n\r\nexport const Button = (props) => {\r\n    return (\r\n        <input\r\n            type=\"button\"\r\n            key={props.key ? props.key : props.id}\r\n            name={props.name ? props.name : props.id}\r\n            id={props.id}\r\n            value={props.value}\r\n            onClick={props.onClick}\r\n            className={`${props.cssButton} button`}\r\n        />\r\n    );\r\n};\r\n\r\nexport const Radio = (props) => {\r\n    return (\r\n        <>\r\n            <label htmlFor={props.id}>{props.labelText}</label>\r\n            <input\r\n                type=\"radio\"\r\n                key={props.key ? props.key : props.id}\r\n                id={props.id}\r\n                name={props.name ? props.name : props.id}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                checked={props.compare === props.value}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport const Field = (props) => {\r\n    return (\r\n        <div className={`${props.cssContainer} container`}>\r\n            <label\r\n                className={`${props.cssLabel} label ${\r\n                    props.value ? \"active\" : props.isActive\r\n                }`}\r\n                htmlFor={props.id}\r\n            >\r\n                {props.labelText}\r\n            </label>\r\n            <input\r\n                className={`${props.cssField} field ${props.isActive}`}\r\n                key={props.key ? props.key : props.id}\r\n                id={props.id}\r\n                name={props.name ? props.name : props.id}\r\n                type={props.type}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                onMouseOver={props.onActive}\r\n                onMouseLeave={props.onActive}\r\n                onFocus={props.onActive}\r\n                onBlur={props.onActive}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Mutation } from \"@apollo/react-components\";\r\nimport { useHistory /* , useRouteMatch */ } from \"react-router-dom\";\r\n\r\nimport { GET_CACHED_EVENTS } from \"../gql/queries\";\r\nimport { UPDATE_INVITATION } from \"../gql/mutators\";\r\nimport { Radio, Field, Submit, Button } from \"./Inputs\";\r\n\r\nconst Attendance = (props) => {\r\n    const history = useHistory(); /* ,\r\n        match = useRouteMatch() */\r\n    const {\r\n        id: inviteId,\r\n        guest: { /* id: guestId, */ first_name, last_name },\r\n        event: { id: eventId },\r\n        attendance,\r\n        comment,\r\n    } = props.invite;\r\n    const [values, setValues] = useState({\r\n        attendance: attendance,\r\n        comment: comment,\r\n    });\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n        setValues((values) => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Mutation\r\n            mutation={UPDATE_INVITATION}\r\n            update={(cache, { data: { updateInvitation } }) => {\r\n                const { events: cachedEvents } = cache.readQuery({\r\n                    query: GET_CACHED_EVENTS,\r\n                });\r\n                let thisEvent = cachedEvents.find((event) => {\r\n                        return event.id === eventId;\r\n                    }),\r\n                    thisInvite = thisEvent.invitations.find((invite) => {\r\n                        return invite.id === inviteId;\r\n                    });\r\n                thisInvite.attendance = values.attendance;\r\n                thisInvite.comment = values.comment;\r\n                thisEvent.invitations = thisEvent.invitations.concat(\r\n                    thisInvite\r\n                );\r\n                cache.writeQuery({\r\n                    query: GET_CACHED_EVENTS,\r\n                    data: { events: cachedEvents.concat(thisEvent) },\r\n                });\r\n            }}\r\n        >\r\n            {(updateInvitation, { loading, error }) => (\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"card bg-warning \">\r\n                        <div\r\n                            style={{ color: \"black\" }}\r\n                            className=\"card-header \"\r\n                        >\r\n                            <div className=\"d-flex  justify-content-center\">\r\n                                <form\r\n                                    onSubmit={(event) => {\r\n                                        event.preventDefault();\r\n                                        updateInvitation({\r\n                                            variables: {\r\n                                                invitation: {\r\n                                                    id: inviteId,\r\n                                                    comment: values.comment,\r\n                                                    attendance:\r\n                                                        values.attendance,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <div className=\"d-flex flex-column text-center\">\r\n                                        {`${first_name} ${last_name}`}\r\n                                        <div className=\"card-title mt-5\">\r\n                                            Are you attending this event ?\r\n                                        </div>\r\n                                        <div className=\"d-flex  justify-content-around\">\r\n                                            <div className=\"d-flex  flex-column\">\r\n                                                <Radio\r\n                                                    id=\"attending\"\r\n                                                    name=\"attendance\"\r\n                                                    value=\"ATTENDING\"\r\n                                                    labelText=\"Attending\"\r\n                                                    onChange={handleChange}\r\n                                                    compare={values.attendance}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"d-flex  flex-column\">\r\n                                                <Radio\r\n                                                    id=\"not_attending\"\r\n                                                    name=\"attendance\"\r\n                                                    value=\"NOT_ATTENDING\"\r\n                                                    labelText=\"Can't Attend\"\r\n                                                    onChange={handleChange}\r\n                                                    compare={values.attendance}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"d-flex  flex-column\">\r\n                                                <Radio\r\n                                                    id=\"maybe\"\r\n                                                    name=\"attendance\"\r\n                                                    value=\"MAYBE\"\r\n                                                    labelText=\"Maybe\"\r\n                                                    onChange={handleChange}\r\n                                                    compare={values.attendance}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <Field\r\n                                            type=\"text\"\r\n                                            id=\"comment\"\r\n                                            value={\r\n                                                values.comment\r\n                                                    ? values.comment\r\n                                                    : \"\"\r\n                                            }\r\n                                            onChange={handleChange}\r\n                                            labelText=\"Comments\"\r\n                                        />\r\n                                        <Submit id=\"submit\" value=\"Save\" />\r\n                                        <Button\r\n                                            id=\"back\"\r\n                                            value=\"Back\"\r\n                                            onClick={() => {\r\n                                                history.push(\r\n                                                    `/events/${eventId}`\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Mutation>\r\n    );\r\n};\r\nexport default Attendance;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Route,\r\n    Switch,\r\n    useRouteMatch,\r\n    useLocation,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { useLazyQuery, useQuery, useApolloClient } from \"@apollo/react-hooks\";\r\nimport { GET_EVENT_BY_ID, GET_CACHED_EVENTS } from \"../gql/queries\";\r\nimport _ from \"lodash\";\r\n\r\nimport EventInfo from \"./EventInfo\";\r\nimport Invited from \"./Invited\";\r\nimport Attendance from \"./Attendance\";\r\n\r\nconst Events = () => {\r\n    const match = useRouteMatch(),\r\n        location = useLocation(),\r\n        address = location.pathname,\r\n        history = useHistory(),\r\n        isEventMatch = new RegExp(`${match.url}/[0-9]+/*`),\r\n        idMatch = new RegExp(\"/[0-9]+/*\", \"g\");\r\n    const [values, setValues] = useState({\r\n        inputValue: isEventMatch.test(address)\r\n            ? address.match(idMatch)[0].replace(/\\//g, \"\")\r\n            : \"\",\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n        setValues((values) => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    };\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    history.push(`/events/${values.inputValue}`);\r\n                }}\r\n            >\r\n                <input\r\n                    type=\"number\"\r\n                    value={values.inputValue}\r\n                    onChange={handleChange}\r\n                    name=\"inputValue\"\r\n                />\r\n                <input type=\"submit\" value=\"Search\" />\r\n            </form>\r\n            <Switch>\r\n                <Route path={`${match.path}/:eventId`}>\r\n                    <Event />\r\n                </Route>\r\n                <Route path={match.path}>Search for an Event</Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Event = () => {\r\n    const match = useRouteMatch(),\r\n        location = useLocation(),\r\n        address = location.pathname,\r\n        client = useApolloClient(),\r\n        isInviteMatch = new RegExp(`${match.url}/*[0-9]+/*`),\r\n        isEventMatch = new RegExp(`${match.url}`),\r\n        idMatch = new RegExp(\"/[0-9]+/*\", \"g\"),\r\n        eventID = address.match(idMatch)[0].replace(/\\//g, \"\"),\r\n        inviteID = address.replace(isEventMatch, \"\").replace(/\\//g, \"\");\r\n    const [lastErrorID, setLastErrorID] = useState(null);\r\n    const {\r\n        data: { events: cachedEvents },\r\n    } = useQuery(GET_CACHED_EVENTS);\r\n    const [getEvent, { data, loading, error }] = useLazyQuery(GET_EVENT_BY_ID);\r\n\r\n    let event = null,\r\n        invite = null;\r\n\r\n    if (loading) {\r\n        if (lastErrorID !== null) {\r\n            setLastErrorID(null);\r\n        }\r\n        return <p>{`Loading event ${eventID}`}</p>;\r\n    } else if (data && data.getEventById.id === eventID) {\r\n        if (lastErrorID !== null) {\r\n            setLastErrorID(null);\r\n        }\r\n        event = data.getEventById;\r\n        if (\r\n            !cachedEvents.find((cachedEvent) => {\r\n                return _.isEqual(cachedEvent, event);\r\n            })\r\n        ) {\r\n            client.writeData({\r\n                data: {\r\n                    events:\r\n                        cachedEvents.length > 0\r\n                            ? cachedEvents.concat(event)\r\n                            : [event],\r\n                },\r\n            });\r\n        }\r\n    } else if (\r\n        !!cachedEvents.find((event) => {\r\n            return event.id === eventID;\r\n        })\r\n    ) {\r\n        if (lastErrorID !== null) {\r\n            setLastErrorID(null);\r\n        }\r\n        event = cachedEvents.find((event) => {\r\n            return event.id === eventID;\r\n        });\r\n    } else if (error && (eventID === lastErrorID || lastErrorID === null)) {\r\n        if (lastErrorID === null) {\r\n            setLastErrorID(eventID);\r\n        }\r\n        return (\r\n            <pre>{`Error loading event ${eventID} with response:\r\n    ${error}`}</pre>\r\n        );\r\n    } else {\r\n        if (lastErrorID !== null) {\r\n            setLastErrorID(null);\r\n        }\r\n        getEvent({ variables: { id: eventID } });\r\n    }\r\n\r\n    if (isInviteMatch.test(address) && !!event) {\r\n        invite = event.invitations.find((invite) => {\r\n            return invite.id === inviteID;\r\n        });\r\n    }\r\n\r\n    if (event === null) {\r\n        return <p>{`Loading event ${eventID}`}</p>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <EventInfo event={event} />\r\n            <Switch>\r\n                <Route path={`${match.path}/:inviteId`}>\r\n                    {!!invite ? (\r\n                        <Attendance invite={invite} />\r\n                    ) : (\r\n                        <p>Invalid invite ID</p>\r\n                    )}\r\n                </Route>\r\n                <Route path={match.path}>\r\n                    <Invited invited={event.invitations} />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Events;\r\n","import React, { useState } from \"react\";\r\nimport { Mutation } from \"@apollo/react-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { CREATE_EVENT } from \"../gql/mutators\";\r\n\r\nconst EventCreator = () => {\r\n    const [values, setValues] = useState({\r\n            addGuestForm: false,\r\n\r\n            title: \"\",\r\n            location: \"\",\r\n            date: \"\",\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            description: \"\",\r\n            guests: [],\r\n            gName: \"\",\r\n            gSurname: \"\",\r\n            gEmail: \"\",\r\n        }),\r\n        {\r\n            addGuestForm,\r\n            title,\r\n            location,\r\n            date,\r\n            startTime,\r\n            endTime,\r\n            description,\r\n            guests,\r\n            gName,\r\n            gSurname,\r\n            gEmail,\r\n        } = values,\r\n        history = useHistory();\r\n\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n        setValues((values) => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const handleCreateEvent = (createEvent, event) => {\r\n        if (\r\n            title !== \"\" &&\r\n            location !== \"\" &&\r\n            date !== \"\" &&\r\n            startTime !== \"\" &&\r\n            endTime !== \"\" &&\r\n            description !== \"\" &&\r\n            guests.length > 0\r\n        ) {\r\n            createEvent({\r\n                variables: {\r\n                    event: {\r\n                        host: {\r\n                            id: 1,\r\n                        },\r\n                        title: title,\r\n                        description: description,\r\n                        date_of_event: date,\r\n                        start_time_of_event: startTime,\r\n                        end_time_of_event: endTime,\r\n                        location: location,\r\n                        invitations: guests.map((guest) => {\r\n                            return { guest: guest };\r\n                        }),\r\n                    },\r\n                },\r\n            });\r\n        } else {\r\n            alert(\"missing field pls fill everywhere\");\r\n        }\r\n    };\r\n\r\n    const addGuest = () => {\r\n        if (gName !== \"\" && gSurname !== \"\" && gEmail !== \"\") {\r\n            setValues((values) => ({\r\n                ...values,\r\n                addGuestForm: !addGuestForm,\r\n                gEmail: \"\",\r\n                gName: \"\",\r\n                gSurname: \"\",\r\n                guests: guests.concat({\r\n                    first_name: gName,\r\n                    last_name: gSurname,\r\n                    email: gEmail,\r\n                }),\r\n            }));\r\n        }\r\n\r\n        console.log(guests);\r\n    };\r\n\r\n    const showAddedGuests = () => {\r\n        return (\r\n            <>\r\n                {guests.length > 0 ? (\r\n                    <div>\r\n                        <div style={{ color: \"grey\" }}>\r\n                            Name&emsp;&emsp;&emsp;&emsp;Surname&emsp;&emsp;&emsp;&emsp;Email{\" \"}\r\n                            <br />\r\n                        </div>\r\n                        <ul className=\"list-group\">\r\n                            {guests.map((guest) => {\r\n                                return (\r\n                                    <li\r\n                                        key={guest.id}\r\n                                        className=\"list-group-item list-group-item-warning\"\r\n                                    >\r\n                                        <div>\r\n                                            <div\r\n                                                style={{\r\n                                                    color: \"#000\",\r\n                                                    fontWeight: \"bold\",\r\n                                                }}\r\n                                            >\r\n                                                {guest.first_name}\r\n                                                &emsp;&emsp;&emsp;&emsp;\r\n                                                {guest.last_name}\r\n                                                &emsp;&emsp;&emsp;&emsp;\r\n                                                {guest.email}{\" \"}\r\n                                                &emsp;&emsp;&emsp;&emsp;\r\n                                                <i\r\n                                                    onClick={() => {\r\n                                                        setValues((values) => ({\r\n                                                            ...values,\r\n                                                            guests: guests.filter(\r\n                                                                (item) => {\r\n                                                                    return (\r\n                                                                        item.id !==\r\n                                                                        guest.id\r\n                                                                    );\r\n                                                                }\r\n                                                            ),\r\n                                                        }));\r\n                                                    }}\r\n                                                    style={{\r\n                                                        cursor: \"pointer\",\r\n                                                    }}\r\n                                                    className=\"fas fa-trash-alt\"\r\n                                                ></i>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                ) : null}\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div style={{ backgroundColor: \"#ECD275\" }} className=\"card\">\r\n            <div className=\"card-header\">\r\n                <div\r\n                    style={{\r\n                        fontSize: 24,\r\n                        padding: \"0 5px\",\r\n                    }}\r\n                    className=\"d-inline ml-3\"\r\n                >\r\n                    Create New Event\r\n                </div>\r\n            </div>\r\n            <Mutation\r\n                mutation={CREATE_EVENT}\r\n                onCompleted={({ id }) => {\r\n                    history.push(`/events/${id}`);\r\n                }}\r\n            >\r\n                {(createEvent, { loading, error }) => (\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            <div>\r\n                                <label\r\n                                    className=\"mr-2\"\r\n                                    style={{ fontWeight: \"bold\" }}\r\n                                    htmlFor=\"title\"\r\n                                >\r\n                                    Event Name :\r\n                                </label>\r\n                                <input\r\n                                    value={title}\r\n                                    onChange={handleChange}\r\n                                    name=\"title\"\r\n                                    id=\"title\"\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label\r\n                                    className=\"mr-4\"\r\n                                    style={{ fontWeight: \"bold\" }}\r\n                                    htmlFor=\"location\"\r\n                                >\r\n                                    Location :\r\n                                </label>\r\n                                <input\r\n                                    value={location}\r\n                                    onChange={handleChange}\r\n                                    name=\"location\"\r\n                                    id=\"location\"\r\n                                    type=\"text\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label\r\n                                    className=\"mr-5\"\r\n                                    style={{ fontWeight: \"bold\" }}\r\n                                    htmlFor=\"date\"\r\n                                >\r\n                                    Date:\r\n                                </label>\r\n                                <input\r\n                                    value={date}\r\n                                    onChange={handleChange}\r\n                                    name=\"date\"\r\n                                    id=\"date\"\r\n                                    type=\"date\"\r\n                                />\r\n                                <label\r\n                                    className=\"ml-1\"\r\n                                    style={{ fontWeight: \"bold\" }}\r\n                                    htmlFor=\"startTime\"\r\n                                >\r\n                                    Start Time:\r\n                                </label>\r\n                                <input\r\n                                    value={startTime}\r\n                                    onChange={handleChange}\r\n                                    name=\"startTime\"\r\n                                    id=\"startTime\"\r\n                                    type=\"time\"\r\n                                />\r\n                                <label\r\n                                    className=\"ml-1\"\r\n                                    style={{ fontWeight: \"bold\" }}\r\n                                    htmlFor=\"endTime\"\r\n                                >\r\n                                    End Time:\r\n                                </label>\r\n                                <input\r\n                                    value={endTime}\r\n                                    onChange={handleChange}\r\n                                    name=\"endTime\"\r\n                                    id=\"endTime\"\r\n                                    type=\"time\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"ml-3\">Description : </p>\r\n                            <textarea\r\n                                value={description}\r\n                                onChange={handleChange}\r\n                                name=\"description\"\r\n                                id=\"description\"\r\n                                cols=\"50\"\r\n                                rows=\"10\"\r\n                            ></textarea>\r\n                        </div>\r\n                        <div>\r\n                            {showAddedGuests()}\r\n                            <button\r\n                                onClick={() => {\r\n                                    setValues((values) => ({\r\n                                        ...values,\r\n                                        addGuestForm: !addGuestForm,\r\n                                    }));\r\n                                }}\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning mt-2 mb-2\"\r\n                            >\r\n                                {\" \"}\r\n                                <i\r\n                                    style={{ marginRight: \"10px\" }}\r\n                                    className=\"fas fa-plus\"\r\n                                ></i>{\" \"}\r\n                                Invitation\r\n                            </button>\r\n                            <div>\r\n                                {addGuestForm ? (\r\n                                    <form\r\n                                        onSubmit={(event) => {\r\n                                            event.preventDefault();\r\n                                            addGuest();\r\n                                        }}\r\n                                        className=\"d-inline-flex flex-column border border-info mb-5\"\r\n                                    >\r\n                                        <div>\r\n                                            <label\r\n                                                className=\"mr-2\"\r\n                                                style={{ fontWeight: \"bold\" }}\r\n                                                htmlFor=\"gName\"\r\n                                            >\r\n                                                {\" \"}\r\n                                                Guest Name :\r\n                                            </label>\r\n                                            <input\r\n                                                value={gName}\r\n                                                onChange={handleChange}\r\n                                                name=\"gName\"\r\n                                                id=\"gName\"\r\n                                                type=\"text\"\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label\r\n                                                className=\"mr-4\"\r\n                                                style={{ fontWeight: \"bold\" }}\r\n                                                htmlFor=\"gSurname\"\r\n                                            >\r\n                                                Guest Surname :\r\n                                            </label>\r\n                                            <input\r\n                                                value={gSurname}\r\n                                                onChange={handleChange}\r\n                                                name=\"gSurname\"\r\n                                                id=\"gSurname\"\r\n                                                type=\"text\"\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label\r\n                                                className=\"mr-4\"\r\n                                                style={{ fontWeight: \"bold\" }}\r\n                                                htmlFor=\"gEmail\"\r\n                                            >\r\n                                                Guest Email :\r\n                                            </label>\r\n                                            <input\r\n                                                value={gEmail}\r\n                                                onChange={handleChange}\r\n                                                name=\"gEmail\"\r\n                                                id=\"gEmail\"\r\n                                                type=\"email\"\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-success mb-3\"\r\n                                            >\r\n                                                Add Invitation\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-inline-flex\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    history.push(\"/\");\r\n                                }}\r\n                                type=\"button\"\r\n                                className=\"btn btn-light mr-2\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                onClick={(event) => {\r\n                                    handleCreateEvent(createEvent, event);\r\n                                }}\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                disabled={loading}\r\n                            >\r\n                                Create\r\n                            </button>\r\n                            {error}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Mutation>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventCreator;\r\n","import \"./style/App.css\";\r\n\r\nimport React from \"react\";\r\nimport { Route, Switch, NavLink } from \"react-router-dom\";\r\n\r\nimport Events from \"./Events\";\r\nimport EventCreator from \"./EventCreator\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <div style={{ width: \"300px\" }}>\r\n                <ul\r\n                    style={{\r\n                        height: \"40px\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                        listStyle: \"none\",\r\n                        padding: 0,\r\n                        fontSize: \"24px\",\r\n                    }}\r\n                >\r\n                    <li>\r\n                        <NavLink\r\n                            exact\r\n                            to=\"/\"\r\n                            activeStyle={{\r\n                                fontWeight: \"bold\",\r\n                                color: \"red\",\r\n                            }}\r\n                        >\r\n                            Home\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            to=\"/events\"\r\n                            activeStyle={{\r\n                                fontWeight: \"bold\",\r\n                                color: \"red\",\r\n                            }}\r\n                        >\r\n                            Events\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            to=\"/new-event\"\r\n                            activeStyle={{\r\n                                fontWeight: \"bold\",\r\n                                color: \"red\",\r\n                            }}\r\n                        >\r\n                            New Event\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <div>Home</div>\r\n                </Route>\r\n                <Route path=\"/events\">\r\n                    <Events />\r\n                </Route>\r\n                <Route path=\"/new-event\">\r\n                    <EventCreator />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ApolloClient, InMemoryCache, HttpLink } from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { resolvers, typeDefs } from \"./gql/resolvers\";\r\nimport App from \"./components/App\";\r\n\r\nconst cache = new InMemoryCache(),\r\n    link = new HttpLink({\r\n        uri: \"https://signup5liadev.herokuapp.com/graphql/\",\r\n    }),\r\n    client = new ApolloClient({ cache, link, resolvers, typeDefs });\r\n\r\ncache.writeData({\r\n    data: {\r\n        events: [],\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <ApolloProvider client={client}>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <App />\r\n        </Router>\r\n    </ApolloProvider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}