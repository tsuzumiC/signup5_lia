{"version":3,"sources":["Components/InputComponent.js","Components/LoginBoxComponent.js","Components/OverlayComponent.js","App.js","index.js"],"names":["InputComponent","props","className","value","isActive","htmlFor","name","lableText","cssClass","type","id","onChange","onClick","onMouseOver","onActive","onMouseLeave","onFocus","onBlur","defaultProps","LoginBoxComponent","state","email","password","active","handleSubmit","bind","handleChange","handleCancle","handleActive","e","preventDefault","this","loginSubmit","setState","target","loginCancel","document","activeElement","onSubmit","loginResult","Component","OverlayComponent","childDisplay","children","App","loggedUser","users","showLogin","checkLogin","signUp","startLogin","closeLogin","result","forEach","DisableScroll","off","alert","console","log","on","loginOverlay","userList","map","user","style","whiteSpace","color","position","top","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.5c093cfd.chunk.js","sourcesContent":["import \"./Style/InputComponent.css\";\r\nimport React from \"react\";\r\n\r\nconst InputComponent = props => {\r\n    return (\r\n        <div className=\"input-container\">\r\n            <label\r\n                className={`input-lable ${\r\n                    props.value ? \"active\" : props.isActive\r\n                }`}\r\n                htmlFor={props.name}\r\n            >\r\n                {props.lableText}\r\n            </label>\r\n            <input\r\n                className={`${props.cssClass} ${props.isActive}`}\r\n                type={props.type}\r\n                value={props.value}\r\n                name={props.name}\r\n                id={props.name}\r\n                onChange={props.onChange}\r\n                onClick={props.onClick}\r\n                onMouseOver={props.onActive}\r\n                onMouseLeave={props.onActive}\r\n                onFocus={props.onActive}\r\n                onBlur={props.onActive}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nInputComponent.defaultProps = {\r\n    type: \"text\",\r\n    name: \"input\"\r\n};\r\n\r\nexport default InputComponent;\r\n","import \"./Style/LoginBoxComponent.css\";\r\nimport React, { Component } from \"react\";\r\nimport InputComponent from \"./InputComponent\";\r\n\r\nclass LoginBoxComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            active: {\r\n                email: \"\",\r\n                password: \"\"\r\n            }\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCancle = this.handleCancle.bind(this);\r\n        this.handleActive = this.handleActive.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.loginSubmit(this.state.email, this.state.password);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleCancle() {\r\n        this.props.loginCancel();\r\n    }\r\n\r\n    handleActive(e) {\r\n        let active = { ...this.state.active };\r\n        if (e.type === \"mouseover\" || e.type === \"focus\") {\r\n            active[e.target.name] = \"active\";\r\n            this.setState({ active: active });\r\n        } else if (\r\n            e.type === \"mouseleave\" &&\r\n            document.activeElement.id !== e.target.name\r\n        ) {\r\n            active[e.target.name] = \"\";\r\n            this.setState({ active: active });\r\n        } else if (e.type === \"blur\") {\r\n            active[e.target.name] = \"\";\r\n            this.setState({ active: active });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-box\">\r\n                <form className=\"form-container\" onSubmit={this.handleSubmit}>\r\n                    <InputComponent\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                        lableText=\"E-mail\"\r\n                        cssClass=\"login-field\"\r\n                        onActive={this.handleActive}\r\n                        isActive={this.state.active.email}\r\n                    />\r\n                    <InputComponent\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        lableText=\"Password\"\r\n                        cssClass=\"login-field\"\r\n                        onActive={this.handleActive}\r\n                        isActive={this.state.active.password}\r\n                    />\r\n                    <div className=\"warning\">{this.props.loginResult}</div>\r\n                    <div className=\"buttons\">\r\n                        <InputComponent\r\n                            type=\"button\"\r\n                            value=\"Cancel\"\r\n                            onClick={this.handleCancle}\r\n                            name=\"cancel\"\r\n                            cssClass=\"cancel-button\"\r\n                        />\r\n                        <InputComponent\r\n                            type=\"submit\"\r\n                            value=\"Login\"\r\n                            name=\"login\"\r\n                            cssClass=\"login-button\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LoginBoxComponent;\r\n","import \"./Style/OverlayComponent.css\";\r\nimport React from \"react\";\r\n\r\nconst OverlayComponent = props => {\r\n    return (\r\n        <div className=\"background\">\r\n            <div className={props.childDisplay}>{props.children}</div>\r\n        </div>\r\n    );\r\n};\r\nOverlayComponent.defaultProps = {\r\n    childDisplay: \"\"\r\n};\r\nexport default OverlayComponent;\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport DisableScroll from \"disable-scroll\";\r\nimport LoginBoxComponent from \"./Components/LoginBoxComponent\";\r\nimport OverlayComponent from \"./Components/OverlayComponent\";\r\nimport InputComponent from \"./Components/InputComponent\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedUser: null,\r\n            loginResult: null,\r\n            users: [\r\n                {\r\n                    name: \"Erik\",\r\n                    id: \"0001\",\r\n                    email: \"erik@eriksson.se\",\r\n                    password: \"1234\"\r\n                },\r\n                {\r\n                    name: \"Anna\",\r\n                    id: \"0002\",\r\n                    email: \"anna@hotmail.com\",\r\n                    password: \"ab23\"\r\n                }\r\n            ],\r\n            showLogin: false\r\n        };\r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.signUp = this.signUp.bind(this);\r\n        this.startLogin = this.startLogin.bind(this);\r\n        this.closeLogin = this.closeLogin.bind(this);\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    checkLogin(email, password) {\r\n        let result = null;\r\n        if (!email) {\r\n            this.setState({ loginResult: \"E-mail is required.\" });\r\n        } else if (!password) {\r\n            this.setState({ loginResult: \"Password is required.\" });\r\n        } else {\r\n            this.state.users.forEach(e => {\r\n                if (e.email === email && e.password === password) {\r\n                    result = e;\r\n                }\r\n            });\r\n            if (result) {\r\n                this.setState({\r\n                    loggedUser: result,\r\n                    loginResult: null,\r\n                    showLogin: false\r\n                });\r\n                DisableScroll.off();\r\n                alert(`Logged in as ${result.name}`);\r\n            } else {\r\n                this.setState({ loginResult: \"Wrong email or password.\" });\r\n            }\r\n        }\r\n    }\r\n\r\n    signUp() {\r\n        console.log(\"Test!\");\r\n    }\r\n\r\n    startLogin() {\r\n        this.setState({ showLogin: true, loginResult: \"\" });\r\n        DisableScroll.on();\r\n    }\r\n\r\n    closeLogin() {\r\n        this.setState({ showLogin: false, loginResult: \"\" });\r\n        DisableScroll.off();\r\n    }\r\n\r\n    render() {\r\n        let loginOverlay;\r\n        if (this.state.showLogin === true) {\r\n            loginOverlay = (\r\n                <OverlayComponent>\r\n                    <LoginBoxComponent\r\n                        loginSubmit={this.checkLogin}\r\n                        loginResult={this.state.loginResult}\r\n                        loginCancel={this.closeLogin}\r\n                    />\r\n                </OverlayComponent>\r\n            );\r\n        }\r\n        /*Temp solution to show users for testing*/\r\n        let userList =\r\n            \"Existing accounts to try: \\n\" +\r\n            this.state.users.map(user => {\r\n                return (\r\n                    \"E-mail: \" +\r\n                    user.email +\r\n                    \"\\n\" +\r\n                    \"Password: \" +\r\n                    user.password +\r\n                    \"\\n\"\r\n                );\r\n            });\r\n\r\n        return (\r\n            <div className=\"app-body\">\r\n                {loginOverlay}\r\n                <div className=\"top-bar\">\r\n                    <InputComponent\r\n                        type=\"button\"\r\n                        value=\"Sign up\"\r\n                        name=\"signup\"\r\n                        onClick={this.signUp}\r\n                        cssClass=\"signup-button\"\r\n                    />\r\n                    <InputComponent\r\n                        type=\"button\"\r\n                        value=\"Login\"\r\n                        name=\"login\"\r\n                        onClick={this.startLogin}\r\n                        cssClass=\"login-button\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        whiteSpace: \"pre-line\",\r\n                        color: \"#fff\",\r\n                        position: \"relative\",\r\n                        top: \"50px\"\r\n                    }}\r\n                >\r\n                    {userList}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}